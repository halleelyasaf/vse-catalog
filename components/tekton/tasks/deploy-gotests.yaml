---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-gotests
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: Testing
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: golang, gotests
    tekton.dev/displayName: vse-framework
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    Beware! Task for demoing and testing purposes ONLY.
    Suggestion: This task should be decomposed in simpler steps.
    Not intended for being a generic task to run any testsuite.
    This task will run gotest suite specified by FEATURE on a CLUSTER.
    Requires a kubeconfig of a cluster with two worker nodes with
    identical SR-IOV capable NICs.
    CLUSTER_NAME indicates the subfolder where the kubeconfig file from the
    managed cluster lives in the input workspace.
    Available FEATURE supported now is PTP and SR-IOV.
    SMOKE_TEST is disabled by default. When enabled a small subset of
    most representative SR-IOV test cases are executed.
  params:
    - name: CLUSTER_NAME
      description: Workspace path where the kubeconfig file lives.
      type: string
    - name: IMAGE
      description: Image where tests live.
      type: string
    - name: NODE1
      description: Name of 1st node.
      type: string
    - name: NODE2
      description: Name of 2nd node.
      type: string
    - name: FEATURE
      description: Operator under test "sriov" (tested) and "ptp" (untested).
      type: string
    - name: SMOKE_TEST
      description: Run small functional test suite. Only applicable to "sriov".
      type: string
      default: "false"
    - name: INTERFACE_LIST
      type: string
  steps:
    - name: run-suite
      timeout: 10h0m0s
      image: $(inputs.params.IMAGE)
      # yamllint disable rule:line-length
      resources:
        requests:
          cpu: 2000m
        limits:
          cpu: 4000m
      script: |
        export PATH=$PATH:$HOME/go/bin
        export CGO_ENABLED=0
        echo '$(workspaces.kubeconfigs.path)/$(params.CLUSTER_NAME)'
        export KUBECONFIG='$(workspaces.kubeconfigs.path)/$(params.CLUSTER_NAME)'
        oc patch sriovoperatorconfig default --type=json -n openshift-sriov-network-operator --patch '[{"op": "replace", "path": "/spec/configDaemonNodeSelector", "value": {"node-role.kubernetes.io/worker-cnf": ""} }]'
        export GOPROXY="https://goproxy.io,direct"
        cd app
        make install || true
        export CNF_INTERFACES_LIST=$(params.INTERFACE_LIST)
        export FEATURES=$(params.FEATURE)
        export CNF_GOTESTS_SRIOV_SMOKE=$(params.SMOKE_TEST)
        export CNF_GOTESTS_SRIOV_REINSTALL="false"
        oc label node $(params.NODE1) node-role.kubernetes.io/worker-cnf= --overwrite
        oc label node $(params.NODE2) node-role.kubernetes.io/worker-cnf= --overwrite
        oc create ns sriov-operator-tests || true
        ./hack/install-ginkgo.sh
        make test-features || true
       # yamllint disable rule:line-length
  workspaces:
    - description: Shared data to read kubeconfigs
      name: kubeconfigs
